name: Build and Release

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
    tags:
      - "v*"

env:
  BINARY_NAME: berastribute
  TARGET: x86_64-unknown-linux-gnu

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pixz

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ env.TARGET }}
          override: true
          profile: minimal

      - name: Build binary
        run: |
          make build

      - name: Create archive
        if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master')
        run: |
          VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//' | sed 's/\./_/g')
          ARCHIVE_NAME="${BINARY_NAME}-v${VERSION}-${TARGET}.txz"
          tar -Ipixz -cf "${ARCHIVE_NAME}" "${BINARY_NAME}"
          echo "ARCHIVE_NAME=${ARCHIVE_NAME}" >> $GITHUB_ENV

      - name: Upload artifact
        if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master')
        uses: actions/upload-artifact@v3
        with:
          name: binary
          path: |
            ${{ env.ARCHIVE_NAME }}
            ${{ env.BINARY_NAME }}

  release:
    name: Create Release
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: binary

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: "Berastribute ${{ github.ref_name }}"
          draft: true
          artifacts: |
            ${{ env.BINARY_NAME }}
            ${{ env.BINARY_NAME }}-v${{ github.ref_name }}-${{ env.TARGET }}.txz
          body: |
            Berastribute Release ${{ github.ref_name }}

            ## Binaries
            - Linux (amd64)

  tag:
    name: Create Tag
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-22.04
    steps:
      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Generate new version
        id: new_version
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.latest_tag }}
          major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          new_patch=$((patch + 1))
          new_version="v$major.$minor.$new_patch"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag ${{ steps.new_version.outputs.new_version }}
          git push origin ${{ steps.new_version.outputs.new_version }}
